

NC News notes:

Notes from Tom's lecture

error handling

error codes - 
see website 'http cats' for lots of codes (humorous site)

we use our judgement as to which code to use, but there are some best practice ones

...
Notes from thursday lecture at 11.30am

pagination notes with paul
it helps stopping the overfetching of data (helps with those who have slow or limited internet access)
to implement it in get articles for nc news, use 'limit' (eg 10)
and use 'offset' to get to page 2 (eg 11-20)
eg OFFSET 6 (in SQL) or .limit(5).offset(5) in knex
use a query
[?p=2&limit=5]   (p represents page)

write a test for this
it("GET status 200 accepts a p query with a default limit of 5 and returns 5 articles", () => {
  return request(app).get('/api/wizards?p=2').expect(200).then(({body}) => {
    expect(body.articles).to.equal(5);
  })
})

in controller

in model

add .limit(5).offset((p-1) * 5) (this would go after orderBy and before modify)
put a p as an argument and set it to default 1 (p=1)
you could also set a default limit at the top if you wanted it to vary








